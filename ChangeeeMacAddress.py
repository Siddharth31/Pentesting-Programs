#!/usr/bin/env python3
import subprocess #USE TO RUN STANDARD INPUT AND OUTPUT GIVEN BY THE USER.
import optparse #USE TO RUN COMMAND LINE OPTIONS IN OUR CODE VIA OUR PROGRAM.
import re# USE TO DO MANY DIFFERENT AND HERE WE HAVE USE THIS MODULE TO GET SPECIFIC MAC ADDRESS.

def arguments(): # THIS FUNCTIONS TAKES THE  ARGUMENTS AND CHECKS IF THEY ARE VALID OR NOT.
    parser = optparse.OptionParser()# USER SELECTS DIFFERENT OPTIONS LIKE wlan0,eth0,etc.
    parser.add_option("-i", "--interface", dest="interface", help="HELPS TO SELECT THE INTERFACE")
    parser.add_option("-m", "--mac", dest="new_mac", help="HELPS TO ENTER THE THE NEW MAC ADDRESS")
    (options, arguments) = parser.parse_args()#USE TO HANDLE USER INPUT AND OUTPUT TO TAKE ARGUMENTS AND OPTIONS.
    if not options.interface:
        parser.error("its ok")
    elif not options.new_mac:
        parser.error("its ok")
    return options

def change_mac(interface, new_mac):#THIS FUNCTION CHANGES THE MAC ADDRESS AS PER USER
    print("changing the mac address :) ")
    subprocess.call(["ifconfig", interface, "down"])
    subprocess.call(["ifconfig", interface, "hw", "ether", new_mac])
    subprocess.call(["ifconfig", interface, "up"])

def change_current_mac(interface):#THIS FUCTION PRINTS THE MAC ADDRESS AFTER CHANGING IT SO USER DOESN'T NEDD TO DO IT MANUALLY
    ifconfig_result=subprocess.check_output(["ifconfig", interface])
    mac_address_result=re.search(r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w", str(ifconfig_result))
    if mac_address_result:
        return mac_address_result.group(0)
    else:
        print("incorrect Mac Address pls Try again ")


options = arguments()
current_mac=change_current_mac(options.interface)
print("Current Mac Address " + str(current_mac))
change_mac(options.interface, options.new_mac)
current_mac=change_current_mac(options.interface)
print("Current Mac Address " + str(current_mac))
